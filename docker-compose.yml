version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: agents_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Backend API Service
  backend:
    build: .
    command: python -m uvicorn backend.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/agents_db
      - GROQ_API_KEY=${GROQ_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/.venv  # Exclude virtual environment
    working_dir: /app

  # Magentic-UI Frontend (optional for local development)
  frontend:
    build: .
    command: magentic-ui --host 0.0.0.0 --port 3000 --config groq_config.json --mcp-config mcp_config.json
    ports:
      - "3000:3000"
    environment:
      - GROQ_API_KEY=${GROQ_API_KEY}
      - BACKEND_URL=http://backend:8000
    depends_on:
      - backend
    volumes:
      - .:/app
    working_dir: /app

volumes:
  postgres_data:
